<?php

namespace App\Livewire;

use App\Models\User;
use Livewire\Component;
use App\Models\Organisation;
use App\Models\UserOrganisation;
use Livewire\Attributes\Validate;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;

class AgentCreateModal extends Component
{
    #[Validate]
    public $first_name;
    #[Validate]
    public $last_name;
    #[Validate]
    public $email;
    public $active = false;

    public function rules(){
        return [
            'first_name' => 'required|max:255',
            'last_name' => 'required|max:255',
            'email' => 'required|email|unique:users'
        ];
    }

    public function createAgent()
    {
        $this->validate();

        $autoGeneratedPassword = '12345678';
        
        // dd($this->active);

        $user_details = [
            'first_name' => $this->first_name,
            'last_name' => $this->last_name,
            'email' => $this->email,
            'password' => $autoGeneratedPassword,
            'active' => $this->active
        ];

        // if(Mail::to($user_details['email'])->send(new \App\Mail\VerificationMail($user_details))){
        if(true){
            $createdUser = User::create([
                'first_name' => $user_details['first_name'],
                'last_name' => $user_details['last_name'],
                'email' => $user_details['email'],
                'password' => Hash::make($user_details['password']),
                'is_super_admin' => 0,
                'active' => $user_details['active'],
            ]);

             // GET CURRENT USER IN SESSION
            $user = Auth::user();

            // Retrieve organisation details
            $user_id = $user->id;

            $organisation = Organisation::whereHas('userOrganisations', function ($query) use ($user_id) {
                $query->where('user_id', $user_id);
            })->first();

            UserOrganisation::create([
                'user_id' => $createdUser->id,
                'org_id' => $organisation->id,
                'is_admin' => 0
            ]);
        }else{
            $this->addError('email', 'The email address is not valid');
        }

        $this->dispatch('agentUpdated');
        $this->dispatch('notifyNewAgent');

        $this->reset();
    }

    public function closeModal()
    {
        $this->dispatch('agentUpdated');
    }

    public function render()
    {
        return view('livewire.agent-create-modal');
    }
}
